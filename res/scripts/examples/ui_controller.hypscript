#importpath "../" "../library";

$meta::log($meta::inspect_type(typeof(test_generic_fn<float>(1.0))));

Logger.log(Logger.INFO, "test int: {}", test_generic_fn<int>(1));
Logger.log(Logger.INFO, "test float: {}", test_generic_fn<float>(1.5));
Logger.log(Logger.INFO, "Test name = {}", Name("hello"));

class TestScript {
    scene: Scene = null;
    entity: uint = ~0u;

    func on_added(scene: Scene, entity: uint) {
        self.scene = scene;
        self.entity = entity;

        var component = get_component(scene, TransformComponent.native_type_id, entity);
        Logger.log(Logger.INFO, "Transform component = {}", component);
        Logger.log(Logger.INFO, "Transform component .get_property = {}", component.get_property);

        var property = component["Translation"];
        Logger.log(Logger.INFO, "property = {} {} {}", property.get_x(), property.get_y(), property.get_z());
    }

    func on_removed() {
        self.scene = null;
        self.entity = ~0u;
    }

    func on_updated(delta: float) {
    }
}

export const controller = TestScript();