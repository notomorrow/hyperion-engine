class Resource
{
protected:
    id : uint = -1u;
}

class File : Resource
{
public:
    path : String = "";

private:
    func is_open() -> bool
    {
        return self.id != -1u;
    }

    func close() -> void
    {
        if (self.is_open()) {
            return;
        }

        fclose(self.id);
        self.id = -1u;
    }

public:
    File(path : String, args : String = "rw+")
    {
        self.path = path;
        self.id = fopen(self.path, args);
    }

    func flush()
    {
        fflush(self.id);
    }

    func write_binary(data : any)
    {
        fwrite(self.id, ToMemoryBuffer(data));
    }

    func write_string(data : any)
    {
        fwrite(self.id, ToString(data));
    }

    func write_line(data : any, flush : bool = false)
    {
        fwrite(self.id, ToString(data));
        fwrite(self.id, '\n');

        if (flush) {
            fflush(self.id);
        }
    }
}

const out: File = File("stdout");
const err: File = File("stderr");